
.. _getting_started_shalek2013:

.. currentmodule:: flotilla

Loading data from Shalek and Satija (2013)
==========================================

In the 2013 paper, `Single-cell transcriptomics reveals bimodality in expression and splicing in immune cells <http://www.ncbi.nlm.nih.gov/pubmed/23685454>`_ (Shalek and Satija, *et al*. *Nature* (2013)), Regev and colleagues performed single-cell sequencing 18 bone marrow-derived dendritic cells (BMDCs), in addition to 3 pooled samples.

This will show you the nitty-gritty of what files you need and in what format to get started with using ```flotilla`` <http://yeolab.github.io/flotilla/docs>`_. In addition to being a tutorial explaining ``flotilla`` inputs, the goal of this document is also to expose every individual step of reformatting data.

We will go over:

* Using ``wget`` to download data over the internet from the command line
* Using ``pandas`` to read in Excel tables and comma-separated variable (``csv``) files
* Basic orientation to working with ``pandas``
    * Transposing matrix data
    * Subsetting data on rows and columns
    * Accessing a single column
    * Changing the values of a single column
* Cleaning data using ``pandas`` and Python standard library packages
    * Removing genes with mangled IDs
    * Fixing inconsistent sample naming between data tables
    * Removing NAs
* Importing the data into ``flotilla``

Before we begin, let's import everything we need.

.. code:: python

    # Import the flotilla package for biological data analysis
    import flotilla
    
    # Import "numerical python" library for number crunching
    import numpy as np
    
    # Import "panel data analysis" library for tabular data
    import pandas as pd


.. parsed-literal::

    :0: FutureWarning: IPython widgets are experimental and may change in the future.


Expression data
---------------

First, we will read in the expression data. These data were obtained using the command ``wget`` to download files from the internet via the command line, like so:

.. code:: python

    %%bash
    wget ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE41nnn/GSE41265/suppl/GSE41265_allGenesTPM.txt.gz


.. parsed-literal::

    --2015-05-06 00:03:02--  ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE41nnn/GSE41265/suppl/GSE41265_allGenesTPM.txt.gz
               => `GSE41265_allGenesTPM.txt.gz'
    Resolving ftp.ncbi.nlm.nih.gov (ftp.ncbi.nlm.nih.gov)... 2607:f220:41e:250::7, 130.14.250.10
    Connecting to ftp.ncbi.nlm.nih.gov (ftp.ncbi.nlm.nih.gov)|2607:f220:41e:250::7|:21... connected.
    Logging in as anonymous ... Logged in!
    ==> SYST ... done.    ==> PWD ... done.
    ==> TYPE I ... done.  ==> CWD (1) /geo/series/GSE41nnn/GSE41265/suppl ... done.
    ==> SIZE GSE41265_allGenesTPM.txt.gz ... 1099290
    ==> EPSV ... done.    ==> RETR GSE41265_allGenesTPM.txt.gz ... done.
    Length: 1099290 (1.0M) (unauthoritative)
    
         0K .......... .......... .......... .......... ..........  4%  102M 0s
        50K .......... .......... .......... .......... ..........  9% 3.22M 0s
       100K .......... .......... .......... .......... .......... 13% 65.3M 0s
       150K .......... .......... .......... .......... .......... 18% 6.50M 0s
       200K .......... .......... .......... .......... .......... 23% 7.02M 0s
       250K .......... .......... .......... .......... .......... 27% 54.3M 0s
       300K .......... .......... .......... .......... .......... 32%  132M 0s
       350K .......... .......... .......... .......... .......... 37% 5.37M 0s
       400K .......... .......... .......... .......... .......... 41%  163M 0s
       450K .......... .......... .......... .......... .......... 46%  165M 0s
       500K .......... .......... .......... .......... .......... 51% 10.1M 0s
       550K .......... .......... .......... .......... .......... 55% 22.9M 0s
       600K .......... .......... .......... .......... .......... 60% 47.4M 0s
       650K .......... .......... .......... .......... .......... 65% 78.8M 0s
       700K .......... .......... .......... .......... .......... 69% 12.8M 0s
       750K .......... .......... .......... .......... .......... 74% 85.8M 0s
       800K .......... .......... .......... .......... .......... 79% 26.9M 0s
       850K .......... .......... .......... .......... .......... 83% 48.0M 0s
       900K .......... .......... .......... .......... .......... 88% 92.6M 0s
       950K .......... .......... .......... .......... .......... 93%  118M 0s
      1000K .......... .......... .......... .......... .......... 97% 14.9M 0s
      1050K .......... .......... ...                             100% 76.1M=0.06s
    
    2015-05-06 00:03:02 (16.9 MB/s) - `GSE41265_allGenesTPM.txt.gz' saved [1099290]
    


We will also compare to the supplementary table 2 data, obtained also using ``wget``.

.. code:: python

    %%bash
    wget http://www.nature.com/nature/journal/v498/n7453/extref/nature12172-s1.zip
    unzip nature12172-s1.zip


.. parsed-literal::

    Archive:  nature12172-s1.zip
       creating: nature12172-s1/
      inflating: nature12172-s1/Supplementary_Table1.xls  
      inflating: nature12172-s1/Supplementary_Table2.xlsx  
      inflating: nature12172-s1/Supplementary_Table3.xls  
      inflating: nature12172-s1/Supplementary_Table4.xls  
      inflating: nature12172-s1/Supplementary_Table5.xls  
      inflating: nature12172-s1/Supplementary_Table6.xls  
      inflating: nature12172-s1/Supplementary_Table7.xlsx  


.. parsed-literal::

    --2015-05-06 00:03:02--  http://www.nature.com/nature/journal/v498/n7453/extref/nature12172-s1.zip
    Resolving www.nature.com (www.nature.com)... 173.205.24.169, 173.205.24.162
    Connecting to www.nature.com (www.nature.com)|173.205.24.169|:80... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: 4634226 (4.4M) [application/zip]
    Saving to: `nature12172-s1.zip'
    
         0K .......... .......... .......... .......... ..........  1% 9.83M 0s
        50K .......... .......... .......... .......... ..........  2% 18.1M 0s
       100K .......... .......... .......... .......... ..........  3% 18.8M 0s
       150K .......... .......... .......... .......... ..........  4% 70.3M 0s
       200K .......... .......... .......... .......... ..........  5% 21.3M 0s
       250K .......... .......... .......... .......... ..........  6% 29.3M 0s
       300K .......... .......... .......... .......... ..........  7% 71.8M 0s
       350K .......... .......... .......... .......... ..........  8% 9.40M 0s
       400K .......... .......... .......... .......... ..........  9%  118M 0s
       450K .......... .......... .......... .......... .......... 11% 19.6M 0s
       500K .......... .......... .......... .......... .......... 12%  104M 0s
       550K .......... .......... .......... .......... .......... 13% 76.8M 0s
       600K .......... .......... .......... .......... .......... 14% 1.92M 0s
       650K .......... .......... .......... .......... .......... 15% 43.0M 0s
       700K .......... .......... .......... .......... .......... 16% 75.9M 0s
       750K .......... .......... .......... .......... .......... 17%  231M 0s
       800K .......... .......... .......... .......... .......... 18% 11.5M 0s
       850K .......... .......... .......... .......... .......... 19%  258M 0s
       900K .......... .......... .......... .......... .......... 20% 17.1M 0s
       950K .......... .......... .......... .......... .......... 22% 93.0M 0s
      1000K .......... .......... .......... .......... .......... 23% 5.97M 0s
      1050K .......... .......... .......... .......... .......... 24% 6.22M 0s
      1100K .......... .......... .......... .......... .......... 25%  193M 0s
      1150K .......... .......... .......... .......... .......... 26%  179M 0s
      1200K .......... .......... .......... .......... .......... 27%  215M 0s
      1250K .......... .......... .......... .......... .......... 28% 9.14M 0s
      1300K .......... .......... .......... .......... .......... 29% 18.1M 0s
      1350K .......... .......... .......... .......... .......... 30% 9.88M 0s
      1400K .......... .......... .......... .......... .......... 32% 10.6M 0s
      1450K .......... .......... .......... .......... .......... 33% 9.85M 0s
      1500K .......... .......... .......... .......... .......... 34% 18.6M 0s
      1550K .......... .......... .......... .......... .......... 35% 9.27M 0s
      1600K .......... .......... .......... .......... .......... 36% 13.3M 0s
      1650K .......... .......... .......... .......... .......... 37% 22.2M 0s
      1700K .......... .......... .......... .......... .......... 38% 6.42M 0s
      1750K .......... .......... .......... .......... .......... 39% 11.8M 0s
      1800K .......... .......... .......... .......... .......... 40% 17.5M 0s
      1850K .......... .......... .......... .......... .......... 41% 6.04M 0s
      1900K .......... .......... .......... .......... .......... 43% 43.0M 0s
      1950K .......... .......... .......... .......... .......... 44% 7.60M 0s
      2000K .......... .......... .......... .......... .......... 45% 6.56M 0s
      2050K .......... .......... .......... .......... .......... 46% 8.36M 0s
      2100K .......... .......... .......... .......... .......... 47% 12.4M 0s
      2150K .......... .......... .......... .......... .......... 48% 9.86M 0s
      2200K .......... .......... .......... .......... .......... 49% 10.5M 0s
      2250K .......... .......... .......... .......... .......... 50% 8.87M 0s
      2300K .......... .......... .......... .......... .......... 51% 7.79M 0s
      2350K .......... .......... .......... .......... .......... 53% 7.61M 0s
      2400K .......... .......... .......... .......... .......... 54% 7.71M 0s
      2450K .......... .......... .......... .......... .......... 55% 7.60M 0s
      2500K .......... .......... .......... .......... .......... 56% 9.68M 0s
      2550K .......... .......... .......... .......... .......... 57% 10.5M 0s
      2600K .......... .......... .......... .......... .......... 58% 9.21M 0s
      2650K .......... .......... .......... .......... .......... 59% 9.18M 0s
      2700K .......... .......... .......... .......... .......... 60% 6.44M 0s
      2750K .......... .......... .......... .......... .......... 61% 23.9M 0s
      2800K .......... .......... .......... .......... .......... 62% 5.30M 0s
      2850K .......... .......... .......... .......... .......... 64% 5.58M 0s
      2900K .......... .......... .......... .......... .......... 65% 7.50M 0s
      2950K .......... .......... .......... .......... .......... 66% 8.64M 0s
      3000K .......... .......... .......... .......... .......... 67% 8.53M 0s
      3050K .......... .......... .......... .......... .......... 68% 8.37M 0s
      3100K .......... .......... .......... .......... .......... 69% 9.08M 0s
      3150K .......... .......... .......... .......... .......... 70% 9.20M 0s
      3200K .......... .......... .......... .......... .......... 71% 10.6M 0s
      3250K .......... .......... .......... .......... .......... 72% 9.21M 0s
      3300K .......... .......... .......... .......... .......... 74% 6.59M 0s
      3350K .......... .......... .......... .......... .......... 75% 4.65M 0s
      3400K .......... .......... .......... .......... .......... 76% 3.02M 0s
      3450K .......... .......... .......... .......... .......... 77% 4.80M 0s
      3500K .......... .......... .......... .......... .......... 78% 5.36M 0s
      3550K .......... .......... .......... .......... .......... 79% 5.71M 0s
      3600K .......... .......... .......... .......... .......... 80% 5.59M 0s
      3650K .......... .......... .......... .......... .......... 81% 7.34M 0s
      3700K .......... .......... .......... .......... .......... 82% 6.04M 0s
      3750K .......... .......... .......... .......... .......... 83% 7.24M 0s
      3800K .......... .......... .......... .......... .......... 85% 7.71M 0s
      3850K .......... .......... .......... .......... .......... 86% 7.93M 0s
      3900K .......... .......... .......... .......... .......... 87% 6.55M 0s
      3950K .......... .......... .......... .......... .......... 88% 9.88M 0s
      4000K .......... .......... .......... .......... .......... 89% 8.85M 0s
      4050K .......... .......... .......... .......... .......... 90% 10.2M 0s
      4100K .......... .......... .......... .......... .......... 91% 8.35M 0s
      4150K .......... .......... .......... .......... .......... 92% 9.60M 0s
      4200K .......... .......... .......... .......... .......... 93% 9.86M 0s
      4250K .......... .......... .......... .......... .......... 95% 11.2M 0s
      4300K .......... .......... .......... .......... .......... 96% 10.1M 0s
      4350K .......... .......... .......... .......... .......... 97% 11.0M 0s
      4400K .......... .......... .......... .......... .......... 98% 9.28M 0s
      4450K .......... .......... .......... .......... .......... 99% 9.12M 0s
      4500K .......... .......... .....                           100% 10.4M=0.5s
    
    2015-05-06 00:03:03 (9.54 MB/s) - `nature12172-s1.zip' saved [4634226/4634226]
    


Now we will read the data in using ```pandas`` <http://pandas.pydata.org>`_, indicating that the file is compressed via gzip, and that we want the first column to be the "index", or row names of the table.

.. code:: python

    expression = pd.read_table("GSE41265_allGenesTPM.txt.gz", compression="gzip", index_col=0)
    expression.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>S1</th>
          <th>S2</th>
          <th>S3</th>
          <th>S4</th>
          <th>S5</th>
          <th>S6</th>
          <th>S7</th>
          <th>S8</th>
          <th>S9</th>
          <th>S10</th>
          <th>...</th>
          <th>S12</th>
          <th>S13</th>
          <th>S14</th>
          <th>S15</th>
          <th>S16</th>
          <th>S17</th>
          <th>S18</th>
          <th>P1</th>
          <th>P2</th>
          <th>P3</th>
        </tr>
        <tr>
          <th>GENE</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>XKR4</th>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>...</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.019906</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>AB338584</th>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>...</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>B3GAT2</th>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.023441</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.029378</td>
          <td>0.000000</td>
          <td>0.055452</td>
          <td>0.000000</td>
          <td>0.029448</td>
          <td>...</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.031654</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>42.150208</td>
          <td>0.680327</td>
          <td>0.022996</td>
          <td>0.110236</td>
        </tr>
        <tr>
          <th>NPL</th>
          <td>72.008590</td>
          <td>0.000000</td>
          <td>128.062012</td>
          <td>0.095082</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>112.310234</td>
          <td>104.329122</td>
          <td>0.119230</td>
          <td>0.000000</td>
          <td>...</td>
          <td>0.000000</td>
          <td>0.116802</td>
          <td>0.104200</td>
          <td>0.106188</td>
          <td>0.229197</td>
          <td>0.110582</td>
          <td>0.000000</td>
          <td>7.109356</td>
          <td>6.727028</td>
          <td>14.525447</td>
        </tr>
        <tr>
          <th>T2</th>
          <td>0.109249</td>
          <td>0.172009</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.182703</td>
          <td>0.076012</td>
          <td>0.078698</td>
          <td>0.000000</td>
          <td>0.093698</td>
          <td>0.076583</td>
          <td>...</td>
          <td>0.693459</td>
          <td>0.010137</td>
          <td>0.081936</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.086879</td>
          <td>0.068174</td>
          <td>0.062063</td>
          <td>0.000000</td>
          <td>0.050605</td>
        </tr>
      </tbody>
    </table>
    <p>5 rows × 21 columns</p>
    </div>



These data are in the "transcripts per million," aka TPM unit. See `this blog post <http://haroldpimentel.wordpress.com/2014/05/08/what-the-fpkm-a-review-rna-seq-expression-units/>`_ if that sounds weird to you.

These data are formatted with samples on the columns, and genes on the rows. But we want the opposite, with samples on the rows and genes on the columns. This follows ```scikit-learn`` <http://scikit-learn.org/stable/tutorial/basic/tutorial.html#loading-an-example-dataset>`_'s standard of data matrices with size (``n_samples``, ``n_features``) as each gene is a feature. So we will simply transpose this.

.. code:: python

    expression = expression.T
    expression.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>GENE</th>
          <th>XKR4</th>
          <th>AB338584</th>
          <th>B3GAT2</th>
          <th>NPL</th>
          <th>T2</th>
          <th>T</th>
          <th>PDE10A</th>
          <th>1700010I14RIK</th>
          <th>6530411M01RIK</th>
          <th>PABPC6</th>
          <th>...</th>
          <th>AK085062</th>
          <th>DHX9</th>
          <th>RNASET2B</th>
          <th>FGFR1OP</th>
          <th>CCR6</th>
          <th>BRP44L</th>
          <th>AK014435</th>
          <th>AK015714</th>
          <th>SFT2D1</th>
          <th>PRR18</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>S1</th>
          <td>0</td>
          <td>0</td>
          <td>0.000000</td>
          <td>72.008590</td>
          <td>0.109249</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0.774638</td>
          <td>23.520936</td>
          <td>0.000000</td>
          <td>0</td>
          <td>460.316773</td>
          <td>0</td>
          <td>0.000000</td>
          <td>39.442566</td>
          <td>0</td>
        </tr>
        <tr>
          <th>S2</th>
          <td>0</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.172009</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0.367391</td>
          <td>1.887873</td>
          <td>0.000000</td>
          <td>0</td>
          <td>823.890290</td>
          <td>0</td>
          <td>0.000000</td>
          <td>4.967412</td>
          <td>0</td>
        </tr>
        <tr>
          <th>S3</th>
          <td>0</td>
          <td>0</td>
          <td>0.023441</td>
          <td>128.062012</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0.249858</td>
          <td>0.313510</td>
          <td>0.166772</td>
          <td>0</td>
          <td>1002.354241</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0</td>
        </tr>
        <tr>
          <th>S4</th>
          <td>0</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.095082</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0.354157</td>
          <td>0.000000</td>
          <td>0.887003</td>
          <td>0</td>
          <td>1230.766795</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.131215</td>
          <td>0</td>
        </tr>
        <tr>
          <th>S5</th>
          <td>0</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.182703</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0.039263</td>
          <td>0.000000</td>
          <td>131.077131</td>
          <td>0</td>
          <td>1614.749122</td>
          <td>0</td>
          <td>0.242179</td>
          <td>95.485743</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
    <p>5 rows × 27723 columns</p>
    </div>



The authors filtered the expression data based on having at least 3 single cells express genes with at TPM (transcripts per million, ) > 1. We can express this in using the ``pandas`` DataFrames easily.

First, from reading the paper and looking at the data, I know there are 18 single cells, and there are 18 samples that start with the letter "S." So I will extract the single samples from the ``index`` (row names) using a ``lambda``, a tiny function which in this case, tells me whether or not that sample id begins with the letter "S".

.. code:: python

    singles_ids = expression.index[expression.index.map(lambda x: x.startswith('S'))]
    print('number of single cells:', len(singles_ids))
    singles = expression.ix[singles_ids]
    
    expression_filtered = expression.ix[:, singles[singles > 1].count() >= 3]
    expression_filtered = np.log(expression_filtered + 1)
    expression_filtered.shape


.. parsed-literal::

    ('number of single cells:', 18)




.. html::

    <pre class='nb-text-output'>
    (21, 6312)
    </pre>



Hmm, that's strange. The paper states that they had 6313 genes after filtering, but I get 6312. Even using "`singles >= 1`" doesn't help. I suppose it's one of the usual bioinformatics 1-off errors :)

(I also tried this with the expression table provided in the supplementary data as "`SupplementaryTable2.xlsx`," and got the same results.)

Now that we've taken care of importing and filtering the expression data, let's do the feature data of the expression data.


Expression feature data
-----------------------

The "Expresion feature data" is similar to the ``fData`` from ``BioconductoR``, where there's some additional data on your features that you want to look at. They uploaded information about the features in their OTHER expression matrix, uploaded as a supplementary file, ``Supplementary_Table2.xlsx``.

.. code:: python

    expression2 = pd.read_excel('nature12172-s1/Supplementary_Table2.xlsx')
    
    # # This was also in features x samples format, so we need to transpose
    # expression2 = expression2.T
    # expression2.head()

Unfortunately, Excel mangled the gene names of the genes that started with a ``201``, and converted those into ``datetime.datetime`` objects, or if the gene ID was all numbers, then it was converted to an integer. We could go in to excel save the file as a csv which would fix this, but for now we'll just ignore those rows.

See, not all the items in the ``GENE`` column are ``unicode`` string objects:

.. code:: python

    set([type(x) for x in expression2.GENE])




.. html::

    <pre class='nb-text-output'>
    {int, unicode, datetime.datetime}
    </pre>



One is an integer:

.. code:: python

    set([x for x in expression2.GENE if isinstance(x, int)])




.. html::

    <pre class='nb-text-output'>
    {100043387}
    </pre>



Several more were converted to ``datetime`` objects.

.. code:: python

    import datetime
    
    set([x for x in expression2.GENE if isinstance(x, datetime.datetime)])




.. html::

    <pre class='nb-text-output'>
    {datetime.datetime(2013, 3, 1, 0, 0),
     datetime.datetime(2013, 3, 2, 0, 0),
     datetime.datetime(2013, 3, 3, 0, 0),
     datetime.datetime(2013, 3, 4, 0, 0),
     datetime.datetime(2013, 3, 5, 0, 0),
     datetime.datetime(2013, 3, 6, 0, 0),
     datetime.datetime(2013, 3, 7, 0, 0),
     datetime.datetime(2013, 3, 8, 0, 0),
     datetime.datetime(2013, 3, 9, 0, 0),
     datetime.datetime(2013, 3, 10, 0, 0),
     datetime.datetime(2013, 3, 11, 0, 0),
     datetime.datetime(2013, 4, 3, 0, 0),
     datetime.datetime(2013, 9, 1, 0, 0),
     datetime.datetime(2013, 9, 2, 0, 0),
     datetime.datetime(2013, 9, 3, 0, 0),
     datetime.datetime(2013, 9, 4, 0, 0),
     datetime.datetime(2013, 9, 5, 0, 0),
     datetime.datetime(2013, 9, 6, 0, 0),
     datetime.datetime(2013, 9, 7, 0, 0),
     datetime.datetime(2013, 9, 8, 0, 0),
     datetime.datetime(2013, 9, 9, 0, 0),
     datetime.datetime(2013, 9, 10, 0, 0),
     datetime.datetime(2013, 9, 11, 0, 0),
     datetime.datetime(2013, 9, 12, 0, 0),
     datetime.datetime(2013, 9, 14, 0, 0),
     datetime.datetime(2013, 9, 15, 0, 0)}
    </pre>



To ignore those columns, we'll only use items in the ``GENE`` column if they are of the type ``unicode``, as such:

.. code:: python

    expression2.GENE = expression2.GENE[expression2.GENE.map(lambda x: isinstance(x, unicode))]

We can take a look at a subset and see that row 25's gene was replaced with an NaN, indicating that the gene there wasn't a string and didn't pass our filter.

.. code:: python

    expression2.ix[20:25, :5]




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>GENE</th>
          <th>S1</th>
          <th>S2</th>
          <th>S3</th>
          <th>S4</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>20</th>
          <td>0610038B21RIK</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>21</th>
          <td>0610039K10RIK</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>22</th>
          <td>0610040B10RIK</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>23</th>
          <td>0610040J01RIK</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>24</th>
          <td>0910001L09RIK</td>
          <td>140.785306</td>
          <td>0.000000</td>
          <td>6.633041</td>
          <td>53.966101</td>
        </tr>
        <tr>
          <th>25</th>
          <td>NaN</td>
          <td>0.000000</td>
          <td>0.073505</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
      </tbody>
    </table>
    </div>



We can remove all the rows with an NaN using ``dropna`` and indicating we only want the function to pay attention to a ``subset`` of the columns. Let's check the ``shape`` of the dataframe so we can see if there were tons of columns removed.

.. code:: python

    expression2.shape




.. html::

    <pre class='nb-text-output'>
    (27723, 23)
    </pre>



Let's look at the 20th to 25th rows again to see if the NaN gene is still there.

.. code:: python

    expression2 = expression2.dropna(subset=['GENE'])
    expression2.ix[20:25, :5]




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>GENE</th>
          <th>S1</th>
          <th>S2</th>
          <th>S3</th>
          <th>S4</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>20</th>
          <td>0610038B21RIK</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>21</th>
          <td>0610039K10RIK</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>22</th>
          <td>0610040B10RIK</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>23</th>
          <td>0610040J01RIK</td>
          <td>0.000000</td>
          <td>0</td>
          <td>0.000000</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>24</th>
          <td>0910001L09RIK</td>
          <td>140.785306</td>
          <td>0</td>
          <td>6.633041</td>
          <td>53.966101</td>
        </tr>
      </tbody>
    </table>
    </div>



Nope, not there! How many columns did we end up removing?

.. code:: python

    expression2.shape




.. html::

    <pre class='nb-text-output'>
    (27696, 23)
    </pre>



Not many, only 27 total genes. Shouldn't have a HUGE impact on the analysis. It's not like we know what those genes do anyway...

Now let's get down to doing what we came here to do: making a table of the feature data. We'll use the column "Gene Category" in this dataframe, which we can see is in the last column by subsetting on the first five rows with ``:5`` and the last five columns with ``-5:``.

.. code:: python

    expression2.ix[:5, -5:]




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>S18</th>
          <th>10,000 cell Rep1 (P1)</th>
          <th>10,000 cell Rep2 (P2)</th>
          <th>10,000 cell Rep3 (P3)</th>
          <th>Gene Category</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.031866</td>
          <td>11.067499</td>
          <td>12.466731</td>
          <td>7.190973</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>116.671522</td>
          <td>77.300963</td>
          <td>67.974030</td>
          <td>64.828913</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.000000</td>
          <td>4.893351</td>
          <td>6.623289</td>
          <td>6.600724</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>0.000000</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0.000000</td>
          <td>32.245673</td>
          <td>32.180601</td>
          <td>46.125662</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>5</th>
          <td>209.268266</td>
          <td>121.227248</td>
          <td>128.939312</td>
          <td>113.595313</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>



We can subset ``expression2`` on the two columns we want: the gene ID in ``GENE`` and the gene category:

.. code:: python

    gene_category = expression2[['GENE', 'Gene Category']]
    gene_category.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>GENE</th>
          <th>Gene Category</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0610007L01RIK</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0610007P14RIK</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0610007P22RIK</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0610008F07RIK</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0610009B22RIK</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>



We want to create a ``pandas.DataFrame`` from the "Gene Category" row for our ``expression_feature_data``, which we will do via:

.. code:: python

    expression_feature_data = gene_category.set_index('GENE')
    expression_feature_data.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Gene Category</th>
        </tr>
        <tr>
          <th>GENE</th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0610007L01RIK</th>
          <td>NaN</td>
        </tr>
        <tr>
          <th>0610007P14RIK</th>
          <td>NaN</td>
        </tr>
        <tr>
          <th>0610007P22RIK</th>
          <td>NaN</td>
        </tr>
        <tr>
          <th>0610008F07RIK</th>
          <td>NaN</td>
        </tr>
        <tr>
          <th>0610009B22RIK</th>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>



Splicing Data
-------------

We obtain the splicing data from this study from the supplementary information, specifically the file, ``Supplementary_Table4.xls``

.. code:: python

    splicing = pd.read_excel('nature12172-s1/Supplementary_Table4.xls', 'splicingTable.txt', index_col=(0,1))
    splicing.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>S1</th>
          <th>S2</th>
          <th>S3</th>
          <th>S4</th>
          <th>S5</th>
          <th>S6</th>
          <th>S7</th>
          <th>S8</th>
          <th>S9</th>
          <th>S10</th>
          <th>S11</th>
          <th>S13</th>
          <th>S14</th>
          <th>S15</th>
          <th>S16</th>
          <th>S17</th>
          <th>S18</th>
          <th>10,000 cell Rep1 (P1)</th>
          <th>10,000 cell Rep2 (P2)</th>
          <th>10,000 cell Rep3 (P3)</th>
        </tr>
        <tr>
          <th>Event name</th>
          <th>gene</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>chr10:126534988:126535177:-@chr10:126533971:126534135:-@chr10:126533686:126533798:-</th>
          <th>Os9</th>
          <td>0.84</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.01</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.03</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>NaN</td>
          <td>0.01</td>
          <td>NaN</td>
          <td>0.27</td>
          <td>0.37</td>
          <td>0.31</td>
        </tr>
        <tr>
          <th>chr10:14403870:14403945:-@chr10:14395740:14395848:-@chr10:14387738:14387914:-</th>
          <th>Vta1</th>
          <td>0.95</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.84</td>
          <td>0.95</td>
          <td>0.91</td>
          <td>0.87</td>
          <td>0.86</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.93</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.96</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.83</td>
          <td>0.85</td>
          <td>0.64</td>
        </tr>
        <tr>
          <th>chr10:20051892:20052067:+@chr10:20052202:20052363:+@chr10:20053198:20053697:+</th>
          <th>Bclaf1</th>
          <td>NaN</td>
          <td>0.04</td>
          <td>0.02</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.14</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.01</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.40</td>
          <td>0.49</td>
          <td>0.59</td>
        </tr>
        <tr>
          <th>chr10:20052864:20053378:+@chr10:20054305:20054451:+@chr10:20059515:20059727:+</th>
          <th>Bclaf1</th>
          <td>0.02</td>
          <td>0.98</td>
          <td>0.55</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.06</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.62</td>
          <td>0.63</td>
          <td>0.70</td>
        </tr>
        <tr>
          <th>chr10:58814831:58815007:+@chr10:58817088:58817158:+@chr10:58818098:58818168:+@chr10:58824609:58824708:+</th>
          <th>P4ha1</th>
          <td>0.42</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.94</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.03</td>
          <td>0.97</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.43</td>
          <td>0.36</td>
          <td>0.52</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: python

    splicing = splicing.T
    splicing




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th>Event name</th>
          <th>chr10:126534988:126535177:-@chr10:126533971:126534135:-@chr10:126533686:126533798:-</th>
          <th>chr10:14403870:14403945:-@chr10:14395740:14395848:-@chr10:14387738:14387914:-</th>
          <th>chr10:20051892:20052067:+@chr10:20052202:20052363:+@chr10:20053198:20053697:+</th>
          <th>chr10:20052864:20053378:+@chr10:20054305:20054451:+@chr10:20059515:20059727:+</th>
          <th>chr10:58814831:58815007:+@chr10:58817088:58817158:+@chr10:58818098:58818168:+@chr10:58824609:58824708:+</th>
          <th>chr10:79173370:79173665:+@chr10:79174001:79174029:+@chr10:79174239:79174726:+</th>
          <th>chr10:79322526:79322700:+@chr10:79322862:79322939:+@chr10:79323569:79323862:+</th>
          <th>chr10:87376364:87376545:+@chr10:87378043:87378094:+@chr10:87393420:87399792:+</th>
          <th>chr10:92747514:92747722:-@chr10:92727625:92728425:-@chr10:92717434:92717556:-</th>
          <th>chr11:101438508:101438565:+@chr11:101439246:101439351:+@chr11:101441899:101443267:+</th>
          <th>...</th>
          <th>chr8:126022488:126022598:+@chr8:126023892:126024007:+@chr8:126025133:126025333:+</th>
          <th>chr14:51455667:51455879:-@chr14:51453589:51453752:-@chr14:51453129:51453242:-</th>
          <th>chr17:29497858:29498102:+@chr17:29500656:29500887:+@chr17:29501856:29502226:+</th>
          <th>chr2:94198908:94199094:-@chr2:94182784:94182954:-@chr2:94172950:94173209:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313558:-@chr9:21311823:21312835:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313795:-@chr9:21311823:21312835:-</th>
          <th>chr10:79545360:79545471:-@chr10:79542698:79544127:-@chr10:79533365:79535263:-</th>
          <th>chr17:5975579:5975881:+@chr17:5985972:5986242:+@chr17:5990136:5990361:+</th>
          <th>chr2:29997782:29997941:+@chr2:30002172:30002382:+@chr2:30002882:30003045:+</th>
          <th>chr7:119221306:119221473:+@chr7:119223686:119223745:+@chr7:119225944:119226075:+</th>
        </tr>
        <tr>
          <th>gene</th>
          <th>Os9</th>
          <th>Vta1</th>
          <th>Bclaf1</th>
          <th>Bclaf1</th>
          <th>P4ha1</th>
          <th>Bsg</th>
          <th>Ptbp1</th>
          <th>Igf1</th>
          <th>Elk3</th>
          <th>Nbr1</th>
          <th>...</th>
          <th>Afg3l1</th>
          <th>Tep1</th>
          <th>Fgd2</th>
          <th>Ttc17</th>
          <th>Tmed1</th>
          <th>Tmed1</th>
          <th>Sbno2</th>
          <th>Synj2</th>
          <th>Tbc1d13</th>
          <th>Usp47</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>S1</th>
          <td>0.84</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.42</td>
          <td>NaN</td>
          <td>0.57</td>
          <td>0.31</td>
          <td>0.93</td>
          <td>0.57</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S2</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S3</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.55</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.20</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S4</th>
          <td>NaN</td>
          <td>0.84</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S5</th>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.94</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.73</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S6</th>
          <td>0.01</td>
          <td>0.91</td>
          <td>0.14</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.61</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S7</th>
          <td>NaN</td>
          <td>0.87</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.62</td>
          <td>NaN</td>
          <td>0.85</td>
          <td>0.73</td>
          <td>0.55</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S8</th>
          <td>NaN</td>
          <td>0.86</td>
          <td>0.02</td>
          <td>0.98</td>
          <td>0.03</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.89</td>
          <td>0.82</td>
          <td>0.83</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S9</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.97</td>
          <td>NaN</td>
          <td>0.97</td>
          <td>NaN</td>
          <td>0.90</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S10</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.06</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S11</th>
          <td>0.03</td>
          <td>0.93</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.97</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S13</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S14</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.88</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S15</th>
          <td>0.02</td>
          <td>0.96</td>
          <td>0.01</td>
          <td>0.06</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.44</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>0.91</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S16</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>0.27</td>
          <td>0.99</td>
          <td>0.99</td>
          <td>0.98</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S17</th>
          <td>0.01</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.96</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.99</td>
          <td>0.98</td>
          <td>0.67</td>
          <td>0.07</td>
        </tr>
        <tr>
          <th>S18</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>10,000 cell Rep1 (P1)</th>
          <td>0.27</td>
          <td>0.83</td>
          <td>0.40</td>
          <td>0.62</td>
          <td>0.43</td>
          <td>0.78</td>
          <td>NaN</td>
          <td>0.60</td>
          <td>0.76</td>
          <td>0.52</td>
          <td>...</td>
          <td>0.92</td>
          <td>NaN</td>
          <td>0.81</td>
          <td>0.77</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.84</td>
          <td>0.50</td>
          <td>0.56</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>10,000 cell Rep2 (P2)</th>
          <td>0.37</td>
          <td>0.85</td>
          <td>0.49</td>
          <td>0.63</td>
          <td>0.36</td>
          <td>0.72</td>
          <td>0.47</td>
          <td>0.60</td>
          <td>0.73</td>
          <td>0.68</td>
          <td>...</td>
          <td>0.67</td>
          <td>0.15</td>
          <td>0.52</td>
          <td>0.67</td>
          <td>0.63</td>
          <td>0.73</td>
          <td>0.82</td>
          <td>0.90</td>
          <td>0.71</td>
          <td>0.55</td>
        </tr>
        <tr>
          <th>10,000 cell Rep3 (P3)</th>
          <td>0.31</td>
          <td>0.64</td>
          <td>0.59</td>
          <td>0.70</td>
          <td>0.52</td>
          <td>0.79</td>
          <td>NaN</td>
          <td>0.65</td>
          <td>0.42</td>
          <td>0.64</td>
          <td>...</td>
          <td>0.58</td>
          <td>0.79</td>
          <td>0.74</td>
          <td>0.85</td>
          <td>0.73</td>
          <td>0.39</td>
          <td>0.56</td>
          <td>NaN</td>
          <td>0.64</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    <p>20 rows × 352 columns</p>
    </div>



The three pooled samples aren't named consistently with the expression data, so we have to fix that.

.. code:: python

    splicing.index[splicing.index.map(lambda x: 'P' in x)]




.. html::

    <pre class='nb-text-output'>
    Index([u'10,000 cell Rep1 (P1)', u'10,000 cell Rep2 (P2)', u'10,000 cell Rep3 (P3)'], dtype='object')
    </pre>



Since the pooled sample IDs are inconsistent with the `expression` data, we have to change them. We can get the "P" and the number after that using regular expressions, called ``re`` in the Python standard library, e.g.:

.. code:: python

    import re
    re.search(r'P\d', '10,000 cell Rep1 (P1)').group()




.. html::

    <pre class='nb-text-output'>
    'P1'
    </pre>



.. code:: python

    def long_pooled_name_to_short(x):
        if 'P' not in x:
            return x
        else:
            return re.search(r'P\d', x).group()
    
    
    splicing.index.map(long_pooled_name_to_short)




.. html::

    <pre class='nb-text-output'>
    array([u'S1', u'S2', u'S3', u'S4', u'S5', u'S6', u'S7', u'S8', u'S9',
           u'S10', u'S11', u'S13', u'S14', u'S15', u'S16', u'S17', u'S18',
           u'P1', u'P2', u'P3'], dtype=object)
    </pre>



And now we assign this new index as our index to the ``splicing`` dataframe.

.. code:: python

    splicing.index = splicing.index.map(long_pooled_name_to_short)
    splicing.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th>Event name</th>
          <th>chr10:126534988:126535177:-@chr10:126533971:126534135:-@chr10:126533686:126533798:-</th>
          <th>chr10:14403870:14403945:-@chr10:14395740:14395848:-@chr10:14387738:14387914:-</th>
          <th>chr10:20051892:20052067:+@chr10:20052202:20052363:+@chr10:20053198:20053697:+</th>
          <th>chr10:20052864:20053378:+@chr10:20054305:20054451:+@chr10:20059515:20059727:+</th>
          <th>chr10:58814831:58815007:+@chr10:58817088:58817158:+@chr10:58818098:58818168:+@chr10:58824609:58824708:+</th>
          <th>chr10:79173370:79173665:+@chr10:79174001:79174029:+@chr10:79174239:79174726:+</th>
          <th>chr10:79322526:79322700:+@chr10:79322862:79322939:+@chr10:79323569:79323862:+</th>
          <th>chr10:87376364:87376545:+@chr10:87378043:87378094:+@chr10:87393420:87399792:+</th>
          <th>chr10:92747514:92747722:-@chr10:92727625:92728425:-@chr10:92717434:92717556:-</th>
          <th>chr11:101438508:101438565:+@chr11:101439246:101439351:+@chr11:101441899:101443267:+</th>
          <th>...</th>
          <th>chr8:126022488:126022598:+@chr8:126023892:126024007:+@chr8:126025133:126025333:+</th>
          <th>chr14:51455667:51455879:-@chr14:51453589:51453752:-@chr14:51453129:51453242:-</th>
          <th>chr17:29497858:29498102:+@chr17:29500656:29500887:+@chr17:29501856:29502226:+</th>
          <th>chr2:94198908:94199094:-@chr2:94182784:94182954:-@chr2:94172950:94173209:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313558:-@chr9:21311823:21312835:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313795:-@chr9:21311823:21312835:-</th>
          <th>chr10:79545360:79545471:-@chr10:79542698:79544127:-@chr10:79533365:79535263:-</th>
          <th>chr17:5975579:5975881:+@chr17:5985972:5986242:+@chr17:5990136:5990361:+</th>
          <th>chr2:29997782:29997941:+@chr2:30002172:30002382:+@chr2:30002882:30003045:+</th>
          <th>chr7:119221306:119221473:+@chr7:119223686:119223745:+@chr7:119225944:119226075:+</th>
        </tr>
        <tr>
          <th>gene</th>
          <th>Os9</th>
          <th>Vta1</th>
          <th>Bclaf1</th>
          <th>Bclaf1</th>
          <th>P4ha1</th>
          <th>Bsg</th>
          <th>Ptbp1</th>
          <th>Igf1</th>
          <th>Elk3</th>
          <th>Nbr1</th>
          <th>...</th>
          <th>Afg3l1</th>
          <th>Tep1</th>
          <th>Fgd2</th>
          <th>Ttc17</th>
          <th>Tmed1</th>
          <th>Tmed1</th>
          <th>Sbno2</th>
          <th>Synj2</th>
          <th>Tbc1d13</th>
          <th>Usp47</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>S1</th>
          <td>0.84</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.42</td>
          <td>NaN</td>
          <td>0.57</td>
          <td>0.31</td>
          <td>0.93</td>
          <td>0.57</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S2</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S3</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.55</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.20</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S4</th>
          <td>NaN</td>
          <td>0.84</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S5</th>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.94</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.73</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    <p>5 rows × 352 columns</p>
    </div>



Right now, ``flotilla`` doesn't work with multi-indexed dataframes, so to deal with this, we'll use ``droplevel`` from ``pandas`` which will remove the gene name "level" from the column names. This is because the ``chr10:.....``-type thing is a unique identifier for splicing events, while the gene name is not (one gene may have many splicing events)

.. code:: python

    splicing.columns = splicing.columns.droplevel(1)
    splicing.head()




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>Event name</th>
          <th>chr10:126534988:126535177:-@chr10:126533971:126534135:-@chr10:126533686:126533798:-</th>
          <th>chr10:14403870:14403945:-@chr10:14395740:14395848:-@chr10:14387738:14387914:-</th>
          <th>chr10:20051892:20052067:+@chr10:20052202:20052363:+@chr10:20053198:20053697:+</th>
          <th>chr10:20052864:20053378:+@chr10:20054305:20054451:+@chr10:20059515:20059727:+</th>
          <th>chr10:58814831:58815007:+@chr10:58817088:58817158:+@chr10:58818098:58818168:+@chr10:58824609:58824708:+</th>
          <th>chr10:79173370:79173665:+@chr10:79174001:79174029:+@chr10:79174239:79174726:+</th>
          <th>chr10:79322526:79322700:+@chr10:79322862:79322939:+@chr10:79323569:79323862:+</th>
          <th>chr10:87376364:87376545:+@chr10:87378043:87378094:+@chr10:87393420:87399792:+</th>
          <th>chr10:92747514:92747722:-@chr10:92727625:92728425:-@chr10:92717434:92717556:-</th>
          <th>chr11:101438508:101438565:+@chr11:101439246:101439351:+@chr11:101441899:101443267:+</th>
          <th>...</th>
          <th>chr8:126022488:126022598:+@chr8:126023892:126024007:+@chr8:126025133:126025333:+</th>
          <th>chr14:51455667:51455879:-@chr14:51453589:51453752:-@chr14:51453129:51453242:-</th>
          <th>chr17:29497858:29498102:+@chr17:29500656:29500887:+@chr17:29501856:29502226:+</th>
          <th>chr2:94198908:94199094:-@chr2:94182784:94182954:-@chr2:94172950:94173209:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313558:-@chr9:21311823:21312835:-</th>
          <th>chr9:21314438:21314697:-@chr9:21313375:21313795:-@chr9:21311823:21312835:-</th>
          <th>chr10:79545360:79545471:-@chr10:79542698:79544127:-@chr10:79533365:79535263:-</th>
          <th>chr17:5975579:5975881:+@chr17:5985972:5986242:+@chr17:5990136:5990361:+</th>
          <th>chr2:29997782:29997941:+@chr2:30002172:30002382:+@chr2:30002882:30003045:+</th>
          <th>chr7:119221306:119221473:+@chr7:119223686:119223745:+@chr7:119225944:119226075:+</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>S1</th>
          <td>0.84</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.42</td>
          <td>NaN</td>
          <td>0.57</td>
          <td>0.31</td>
          <td>0.93</td>
          <td>0.57</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S2</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>0.98</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S3</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.02</td>
          <td>0.55</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.20</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S4</th>
          <td>NaN</td>
          <td>0.84</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>0.04</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>S5</th>
          <td>NaN</td>
          <td>0.95</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.94</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.73</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    <p>5 rows × 352 columns</p>
    </div>



Great, now we have a perfectly formatted splicing dataframe!

Metadata
~~~~~~~~

Now let's get into creating a metadata dataframe. We'll use the index from the ``expression_filtered`` data to create the minimum required column, ``'phenotype'``, which has the name of the phenotype of that cell. And we'll also add the column ``'pooled'`` to indicate whether this sample is pooled or not.

.. code:: python

    metadata = pd.DataFrame(index=expression_filtered.index)
    metadata['phenotype'] = 'BDMC'
    metadata['pooled'] = metadata.index.map(lambda x: x.startswith('P'))
    
    metadata




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>phenotype</th>
          <th>pooled</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>S1</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S2</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S3</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S4</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S5</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S6</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S7</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S8</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S9</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S10</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S11</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S12</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S13</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S14</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S15</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S16</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S17</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>S18</th>
          <td>BDMC</td>
          <td>False</td>
        </tr>
        <tr>
          <th>P1</th>
          <td>BDMC</td>
          <td>True</td>
        </tr>
        <tr>
          <th>P2</th>
          <td>BDMC</td>
          <td>True</td>
        </tr>
        <tr>
          <th>P3</th>
          <td>BDMC</td>
          <td>True</td>
        </tr>
      </tbody>
    </table>
    </div>



Mapping stats data
------------------

We also want to include the information about how well each sample's reads mapped to the genome, which the authors included as ``Supplementary_Table1.xls``

.. code:: python

    mapping_stats = pd.read_excel('nature12172-s1/Supplementary_Table1.xls', sheetname='SuppTable1 2.txt')
    mapping_stats




.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Sample</th>
          <th>PF_READS</th>
          <th>PCT_MAPPED_GENOME</th>
          <th>PCT_RIBOSOMAL_BASES</th>
          <th>MEDIAN_CV_COVERAGE</th>
          <th>MEDIAN_5PRIME_BIAS</th>
          <th>MEDIAN_3PRIME_BIAS</th>
          <th>MEDIAN_5PRIME_TO_3PRIME_BIAS</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>S1</td>
          <td>21326048</td>
          <td>0.706590</td>
          <td>0.006820</td>
          <td>0.509939</td>
          <td>0.092679</td>
          <td>0.477321</td>
          <td>0.247741</td>
        </tr>
        <tr>
          <th>1</th>
          <td>S2</td>
          <td>27434011</td>
          <td>0.745385</td>
          <td>0.004111</td>
          <td>0.565732</td>
          <td>0.056583</td>
          <td>0.321053</td>
          <td>0.244062</td>
        </tr>
        <tr>
          <th>2</th>
          <td>S3</td>
          <td>31142391</td>
          <td>0.722087</td>
          <td>0.006428</td>
          <td>0.540341</td>
          <td>0.079551</td>
          <td>0.382286</td>
          <td>0.267367</td>
        </tr>
        <tr>
          <th>3</th>
          <td>S4</td>
          <td>26231852</td>
          <td>0.737854</td>
          <td>0.004959</td>
          <td>0.530978</td>
          <td>0.067041</td>
          <td>0.351670</td>
          <td>0.279782</td>
        </tr>
        <tr>
          <th>4</th>
          <td>S5</td>
          <td>29977214</td>
          <td>0.746466</td>
          <td>0.006121</td>
          <td>0.525598</td>
          <td>0.066543</td>
          <td>0.353995</td>
          <td>0.274252</td>
        </tr>
        <tr>
          <th>5</th>
          <td>S6</td>
          <td>24148387</td>
          <td>0.730079</td>
          <td>0.008794</td>
          <td>0.529650</td>
          <td>0.072095</td>
          <td>0.413696</td>
          <td>0.225929</td>
        </tr>
        <tr>
          <th>6</th>
          <td>S7</td>
          <td>24078116</td>
          <td>0.730638</td>
          <td>0.007945</td>
          <td>0.540913</td>
          <td>0.051991</td>
          <td>0.358597</td>
          <td>0.201984</td>
        </tr>
        <tr>
          <th>7</th>
          <td>S8</td>
          <td>25032126</td>
          <td>0.739989</td>
          <td>0.004133</td>
          <td>0.512725</td>
          <td>0.058783</td>
          <td>0.373509</td>
          <td>0.212337</td>
        </tr>
        <tr>
          <th>8</th>
          <td>S9</td>
          <td>22257682</td>
          <td>0.747427</td>
          <td>0.004869</td>
          <td>0.521622</td>
          <td>0.063566</td>
          <td>0.334294</td>
          <td>0.240641</td>
        </tr>
        <tr>
          <th>9</th>
          <td>S10</td>
          <td>29436289</td>
          <td>0.748795</td>
          <td>0.005499</td>
          <td>0.560454</td>
          <td>0.036219</td>
          <td>0.306729</td>
          <td>0.187479</td>
        </tr>
        <tr>
          <th>10</th>
          <td>S11</td>
          <td>31130278</td>
          <td>0.741882</td>
          <td>0.002740</td>
          <td>0.558882</td>
          <td>0.049581</td>
          <td>0.349191</td>
          <td>0.211787</td>
        </tr>
        <tr>
          <th>11</th>
          <td>S12</td>
          <td>21161595</td>
          <td>0.750782</td>
          <td>0.006837</td>
          <td>0.756339</td>
          <td>0.013878</td>
          <td>0.324264</td>
          <td>0.195430</td>
        </tr>
        <tr>
          <th>12</th>
          <td>S13</td>
          <td>28612833</td>
          <td>0.733976</td>
          <td>0.011718</td>
          <td>0.598687</td>
          <td>0.035392</td>
          <td>0.357447</td>
          <td>0.198566</td>
        </tr>
        <tr>
          <th>13</th>
          <td>S14</td>
          <td>26351189</td>
          <td>0.748323</td>
          <td>0.004106</td>
          <td>0.517518</td>
          <td>0.070293</td>
          <td>0.381095</td>
          <td>0.259122</td>
        </tr>
        <tr>
          <th>14</th>
          <td>S15</td>
          <td>25739575</td>
          <td>0.748421</td>
          <td>0.003353</td>
          <td>0.526238</td>
          <td>0.050938</td>
          <td>0.324207</td>
          <td>0.212366</td>
        </tr>
        <tr>
          <th>15</th>
          <td>S16</td>
          <td>26802346</td>
          <td>0.739833</td>
          <td>0.009370</td>
          <td>0.520287</td>
          <td>0.071503</td>
          <td>0.358758</td>
          <td>0.240009</td>
        </tr>
        <tr>
          <th>16</th>
          <td>S17</td>
          <td>26343522</td>
          <td>0.749358</td>
          <td>0.003155</td>
          <td>0.673195</td>
          <td>0.024121</td>
          <td>0.301588</td>
          <td>0.245854</td>
        </tr>
        <tr>
          <th>17</th>
          <td>S18</td>
          <td>25290073</td>
          <td>0.749358</td>
          <td>0.007465</td>
          <td>0.562382</td>
          <td>0.048528</td>
          <td>0.314776</td>
          <td>0.215160</td>
        </tr>
        <tr>
          <th>18</th>
          <td>10k_rep1</td>
          <td>28247826</td>
          <td>0.688553</td>
          <td>0.018993</td>
          <td>0.547000</td>
          <td>0.056113</td>
          <td>0.484393</td>
          <td>0.140333</td>
        </tr>
        <tr>
          <th>19</th>
          <td>10k_rep2</td>
          <td>39303876</td>
          <td>0.690313</td>
          <td>0.017328</td>
          <td>0.547621</td>
          <td>0.055600</td>
          <td>0.474634</td>
          <td>0.142889</td>
        </tr>
        <tr>
          <th>20</th>
          <td>10k_rep3</td>
          <td>29831281</td>
          <td>0.710875</td>
          <td>0.010610</td>
          <td>0.518053</td>
          <td>0.066053</td>
          <td>0.488738</td>
          <td>0.168180</td>
        </tr>
        <tr>
          <th>21</th>
          <td>MB_SC1</td>
          <td>13848219</td>
          <td>0.545000</td>
          <td>0.007000</td>
          <td>0.531495</td>
          <td>0.127934</td>
          <td>0.207841</td>
          <td>0.728980</td>
        </tr>
        <tr>
          <th>22</th>
          <td>MB_SC2</td>
          <td>13550218</td>
          <td>0.458000</td>
          <td>0.010800</td>
          <td>0.569271</td>
          <td>0.102581</td>
          <td>0.179407</td>
          <td>0.694747</td>
        </tr>
        <tr>
          <th>23</th>
          <td>MB_SC3</td>
          <td>26765848</td>
          <td>0.496000</td>
          <td>0.007900</td>
          <td>0.535192</td>
          <td>0.141893</td>
          <td>0.231068</td>
          <td>0.722080</td>
        </tr>
      </tbody>
    </table>
    </div>



Create a ``flotilla`` Study!
----------------------------

We've now prepared five (5!) different dataframes of information that together represent this body of work. They are:

* ``metadata``: A table describing each individual sample
* ``expression_filtered``: A big matrix of gene expression values for each sample
* ``expression_feature_data``: A table describing metadata on the genes, e.g. the category of the gene
* ``splicing_data``: A big matrix of "percent spliced-in" splicing scores for each sample
* ``mapping_stats_data``: A table describing the percentage of reads that mapped to the genome, plus other information about where the genes mapped, for each sample

.. code:: python

    study = flotilla.Study(# The metadata describing phenotype and pooled samples
                           metadata, 
                           
                           # A version for this data
                           version='0.1.0', 
                           
                           # Dataframe of the filtered expression data
                           expression_data=expression_filtered,
                           
                           # Dataframe of the feature data of the genes
                           expression_feature_data=expression_feature_data,
                           
                           # Dataframe of the splicing data
                           splicing_data=splicing, 
                           
                           # Dataframe of the mapping stats data
                           mapping_stats_data=mapping_stats, 
                           
                           # Which column in "mapping_stats" has the number of reads
                           mapping_stats_number_mapped_col='PF_READS')


.. parsed-literal::

    2015-05-06 00:03:22	Initializing Study
    2015-05-06 00:03:22	Initializing Predictor configuration manager for Study
    2015-05-06 00:03:22	Predictor ExtraTreesClassifier is of type <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>
    2015-05-06 00:03:22	Added ExtraTreesClassifier to default predictors
    2015-05-06 00:03:22	Predictor ExtraTreesRegressor is of type <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>
    2015-05-06 00:03:22	Added ExtraTreesRegressor to default predictors
    2015-05-06 00:03:22	Predictor GradientBoostingClassifier is of type <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>
    2015-05-06 00:03:22	Added GradientBoostingClassifier to default predictors
    2015-05-06 00:03:22	Predictor GradientBoostingRegressor is of type <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>
    2015-05-06 00:03:22	Added GradientBoostingRegressor to default predictors
    2015-05-06 00:03:22	Loading metadata
    2015-05-06 00:03:22	Loading expression data
    2015-05-06 00:03:22	Initializing expression
    2015-05-06 00:03:22	Done initializing expression
    2015-05-06 00:03:22	Loading splicing data
    2015-05-06 00:03:22	Initializing splicing
    2015-05-06 00:03:22	Done initializing splicing
    2015-05-06 00:03:22	Successfully initialized a Study object!


.. parsed-literal::

    No phenotype to color mapping was provided, falling back on reasonable defaults.
    No phenotype to marker (matplotlib plotting symbol) was provided, falling back on reasonable defaults.


As a side note, you can save this study to disk now, so you can "``embark``" (load it) later:

Save the study so you can load it later
---------------------------------------

.. code:: python

    study.save('shalek2013')


.. parsed-literal::

    Wrote datapackage to /home/travis/flotilla_projects/shalek2013/datapackage.json


Note that this is saved to my home directory, in ``~/flotilla_projects/<study_name>/``. This will be saved in your home directory, too.

The ``datapackage.json`` file is what holds all the information relative to the study, and loosely follows the `datapackage spec <http://data.okfn.org/doc/data-package>`_ created by the Open Knowledge Foundation.

.. code:: python

    cat /Users/olga/flotilla_projects/shalek2013/datapackage.json


.. parsed-literal::

    cat: /Users/olga/flotilla_projects/shalek2013/datapackage.json: No such file or directory


One thing to note is that when you save, the version number is bumped up. ``study.version`` (the one we just made) is ``0.1.0``, but the one we saved is ``0.1.1``, since we could have made some changes to the data.

Let's look at what else is in this folder:

.. code:: python

    ls /Users/olga/flotilla_projects/shalek2013


.. parsed-literal::

    ls: cannot access /Users/olga/flotilla_projects/shalek2013: No such file or directory


So this is where all the other files are. Good to know!

We can "embark" on this newly-saved study now very painlessly, without having to open and process all those files again:

.. code:: python

    study2 = flotilla.embark('shalek2013')


.. parsed-literal::

    2015-05-06 00:03:24	Reading datapackage from /home/travis/flotilla_projects/shalek2013/datapackage.json
    2015-05-06 00:03:24	Parsing datapackage to create a Study object
    2015-05-06 00:03:24	Initializing Study


.. parsed-literal::

    2015-05-06 00:03:24	Initializing Predictor configuration manager for Study
    2015-05-06 00:03:24	Predictor ExtraTreesClassifier is of type <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>
    2015-05-06 00:03:24	Added ExtraTreesClassifier to default predictors
    2015-05-06 00:03:24	Predictor ExtraTreesRegressor is of type <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>
    2015-05-06 00:03:24	Added ExtraTreesRegressor to default predictors
    2015-05-06 00:03:24	Predictor GradientBoostingClassifier is of type <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>
    2015-05-06 00:03:24	Added GradientBoostingClassifier to default predictors
    2015-05-06 00:03:24	Predictor GradientBoostingRegressor is of type <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>
    2015-05-06 00:03:24	Added GradientBoostingRegressor to default predictors
    2015-05-06 00:03:24	Loading metadata
    2015-05-06 00:03:24	Loading expression data
    2015-05-06 00:03:24	Initializing expression
    2015-05-06 00:03:24	Done initializing expression
    2015-05-06 00:03:24	Loading splicing data
    2015-05-06 00:03:24	Initializing splicing
    2015-05-06 00:03:24	Done initializing splicing
    2015-05-06 00:03:24	Successfully initialized a Study object!


.. code:: python

    study == study2




.. html::

    <pre class='nb-text-output'>
    False
    </pre>



